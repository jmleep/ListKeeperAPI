// <auto-generated />
using System;
using ListKeeperAPI.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace ListKeeperAPI.Migrations
{
    [DbContext(typeof(ListKeeperAPIContext))]
    partial class ListKeeperAPIContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("ListKeeperAPI.Models.LKParentList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ID");

                    b.ToTable("LKParentList");
                });

            modelBuilder.Entity("ListKeeperAPI.Models.LKSubList", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ParentListID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("ParentListID");

                    b.ToTable("LKSubList");
                });

            modelBuilder.Entity("ListKeeperAPI.Models.LKTask", b =>
                {
                    b.Property<int>("ID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ID"), 1L, 1);

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreated")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsComplete")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SubListID")
                        .HasColumnType("int");

                    b.HasKey("ID");

                    b.HasIndex("SubListID");

                    b.ToTable("LKTask");
                });

            modelBuilder.Entity("ListKeeperAPI.Models.LKSubList", b =>
                {
                    b.HasOne("ListKeeperAPI.Models.LKParentList", "ParentList")
                        .WithMany("SubLists")
                        .HasForeignKey("ParentListID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ParentList");
                });

            modelBuilder.Entity("ListKeeperAPI.Models.LKTask", b =>
                {
                    b.HasOne("ListKeeperAPI.Models.LKSubList", "SubList")
                        .WithMany("Tasks")
                        .HasForeignKey("SubListID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("SubList");
                });

            modelBuilder.Entity("ListKeeperAPI.Models.LKParentList", b =>
                {
                    b.Navigation("SubLists");
                });

            modelBuilder.Entity("ListKeeperAPI.Models.LKSubList", b =>
                {
                    b.Navigation("Tasks");
                });
#pragma warning restore 612, 618
        }
    }
}
